swagger: "2.0"
info:
  version: 1.0.0
  title: NCS Marketplace
  description: API design specification for NCS Marketplace using swagger 2.0 specification.
host: newstack.hpe.com
basePath: "/rest/marketplace"
schemes:
- http
paths:
  /healthz:
    get:
      operationId: healthz
      summary: "health check"
      responses:
        200:
          description: healthy
        default:
          description: unexpected error
  /cloudServices:
    options:
      description: |
        Enable CORS by returning correct headers
      consumes:
        - application/json
      responses:
        "200":
          $ref: '#/responses/APIOptionsResponse'
    get:
      description: Returns all cloud services from NCS marketplace that the user has access to
      operationId: getAllCloudServices
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
          - $ref: "#/parameters/serviceQueryParam"
          - $ref: "#/parameters/acceptHeader"
          - $ref: "#/parameters/acceptCharsetHeader"
          - $ref: "#/parameters/acceptLanguageHeader"
          - $ref: "#/parameters/authHeader"
          - $ref: "#/parameters/customerId"
          - $ref: "#/parameters/userId"
          - $ref: "#/parameters/cloudPlatformsQueryParam"
          - $ref: "#/parameters/cloudProvidersQueryParam"
          - $ref: "#/parameters/startParam"
          - $ref: "#/parameters/countParam"
          - $ref: "#/parameters/fieldsParam"
          - $ref: "#/parameters/sortParam"
          - $ref: "#/parameters/viewParam"
          - $ref: "#/parameters/ifNoneMatchHeader"
          - $ref: "#/parameters/varyHeader"
          - $ref: "#/parameters/versionHeader"
      responses:
        "200":
          description: A list of cloud services
          schema:
              $ref: '#/definitions/PagedCloudServices'
          headers:
            Content-Type:
              description: Browser caching only, with forced validation
              type: string            
            Cache-Control:
              description: Browser caching only, with forced validation
              type: string
            Content-Language:
              description: The language in the response body
              type: string
            Date:
              description: The date and time of the response
              type: string
            ETag:
              description: The entity tag of the resource
              type: string
            Expires:
              description: Force cache validation
              type: string
            Last-Modified:
              description: The date and time of the last modification of the resource
              type: string
            Vary:
              description: Accept, Accept-Charset, Accept-Language, X-API-Version - don't use cached data when these headers are different
              type: string
        "304":
          $ref: '#/responses/ClientsCachedResourceStillValidResponse'
        "400":
          $ref: '#/responses/OneofQueryParametersInvalidResponse'
        "401":
          $ref: '#/responses/CallerNotAuthenticatedUserResponse'
        "403":
          $ref: '#/responses/UserLacksPermissionToViewResourceResponse'
        "404":
          $ref: '#/responses/ResourceDoesNotExistResponse'
        "412":
          $ref: '#/responses/APIVersionNotSpecifiedResponse'
        "415":
          $ref: '#/responses/RequestedMediatypeNotSupportedResponse'
        "422":
          $ref: '#/responses/Standard422PayloadTooLarge'
        "500":
          $ref: '#/responses/Standard500ErrorResponse'
        default:
          $ref: '#/responses/Standard500ErrorResponse'

    post:
      description: Publishes a cloud service to a cloud provider. This is **NOT IMPLEMENTED**
      operationId: publishCloudService
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
        - $ref: "#/parameters/acceptHeader"
        - $ref: "#/parameters/acceptCharsetHeader"
        - $ref: "#/parameters/acceptLanguageHeader"
        - $ref: "#/parameters/authHeader"
        - $ref: "#/parameters/customerId"
        - $ref: "#/parameters/userId"
        - $ref: "#/parameters/ifNoneMatchHeader"
        - $ref: "#/parameters/varyHeader"
        - $ref: "#/parameters/versionHeader"
        - name: displayName
          in: formData
          type: string
          description: Localized display name of Cloud Service
          required: true
        - name: version
          in: formData
          type: string
          description: Version of cloud service
          required: true
        - name: cloudServicePayload
          in: formData
          type: file
          description: A cloud service payload file in .tgz format.
          required: true
        - name: cost
          in: formData
          type: number
          format: float
          description: Cost of the service(in USD)
          required: true
        - name: cloudPlatforms
          in: formData
          type: array
          items:
            type: string
            format: URI
          required: true
        - name: cloudProvider
          in: formData
          type: string
          format: URI
          required: true
        - name: type
          in: formData
          type: string
          format: URI
          required: true
        - name: category
          in: formData
          type: string
          format: URI
      responses:
        "200":
          description: Response returned on succesful deployment of cloud service
          schema:
            $ref: '#/definitions/CloudService'
          headers:
            Content-Type:
              description: Entity header is used to indicate the media type of the resource
              type: string
            Cache-Control:
              description: Browser caching only, with forced validation
              type: string
            Content-Language:
              description: The language in the response body
              type: string
            Date:
              description: The date and time of the response
              type: string
            ETag:
              description: The entity tag of the resource
              type: string
            Expires:
              description: Force cache validation
              type: string
            Last-Modified:
              description: The date and time of the last modification of the resource
              type: string
            Vary:
              description: Accept, Accept-Charset, Accept-Language, X-API-Version - don't use cached data when these headers are different
              type: string
        "304":
          $ref: '#/responses/ClientsCachedResourceStillValidResponse'
        "400":
          $ref: '#/responses/OneofQueryParametersInvalidResponse'
        "401":
          $ref: '#/responses/CallerNotAuthenticatedUserResponse'
        "403":
          $ref: '#/responses/UserLacksPermissionToViewResourceResponse'
        "404":
          $ref: '#/responses/ResourceDoesNotExistResponse'
        "412":
          $ref: '#/responses/APIVersionNotSpecifiedResponse'
        "415":
          $ref: '#/responses/RequestedMediatypeNotSupportedResponse'
        "500":
          $ref: '#/responses/Standard500ErrorResponse'
        default:
          $ref: '#/responses/Standard500ErrorResponse'
  /cloudServices/{id}:
    options:
      description: |
        Enable CORS by returning correct headers
      consumes:
      - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          $ref: '#/responses/APIOptionsResponse'
    get:
      description: Returns requested cloudService
      operationId: getCloudService
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - $ref: "#/parameters/acceptHeader"
        - $ref: "#/parameters/acceptCharsetHeader"
        - $ref: "#/parameters/acceptLanguageHeader"
        - $ref: "#/parameters/authHeader"
        - $ref: "#/parameters/customerId"
        - $ref: "#/parameters/userId"
        - $ref: "#/parameters/fieldsParam"
        - $ref: "#/parameters/viewParam"
        - $ref: "#/parameters/ifNoneMatchHeader"
        - $ref: "#/parameters/varyHeader"
        - $ref: "#/parameters/versionHeader"
      responses:
        "200":
          description: Requested cloud service
          schema:
              $ref: '#/definitions/CloudService'
          headers:
            Content-Type:
              description: Browser caching only, with forced validation
              type: string
            Cache-Control:
              description: Browser caching only, with forced validation
              type: string
            Content-Language: 
              description: The language in the response body 
              type: string
            Date: 
              description: The date and time of the response
              type: string
            ETag: 
              description: The entity tag of the resource
              type: string
            Expires: 
              description: Force cache validation
              type: string
            Last-Modified: 
              description: The date and time of the last modification of the resource
              type: string
            Vary: 
              description: Accept, Accept-Charset, Accept-Language, X-API-Version - don't use cached data when these headers are different
              type: string
        "401":
          $ref: '#/responses/CallerNotAuthenticatedUserResponse'
        "403": 
          $ref: '#/responses/UserLacksPermissionToViewResourceResponse'        
        "404": 
          $ref: '#/responses/ResourceDoesNotExistResponse'
        "412": 
          $ref: '#/responses/APIVersionNotSpecifiedResponse'
        "415":
          $ref: '#/responses/RequestedMediatypeNotSupportedResponse'
        "500":
          $ref: '#/responses/Standard500ErrorResponse'
  /cloudProviders:
    options:
      description: |
        Enable CORS by returning correct headers
      consumes:
        - application/json
      responses:
        "200":
          $ref: '#/responses/APIOptionsResponse'
    get:
      description: Get Cloud Providers. **Pagination is NOT IMPLEMENTED**. Therefore start, count query params will not be used.
      operationId: getCloudProviders
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - $ref: "#/parameters/acceptHeader"
        - $ref: "#/parameters/acceptCharsetHeader"
        - $ref: "#/parameters/acceptLanguageHeader"
        - $ref: "#/parameters/authHeader"
        - $ref: "#/parameters/customerId"
        - $ref: "#/parameters/userId"
        - $ref: "#/parameters/startParam"
        - $ref: "#/parameters/countParam"
        - $ref: "#/parameters/fieldsParam"
        - $ref: "#/parameters/sortParam"
        - $ref: "#/parameters/viewParam"
        - $ref: "#/parameters/ifNoneMatchHeader"
        - $ref: "#/parameters/varyHeader"
        - $ref: "#/parameters/versionHeader"
      responses:
        "200":
          description: A list of cloud providers
          schema:
              $ref: '#/definitions/PagedCloudProviders'
          headers:
            Content-Type:
              description: Browser caching only, with forced validation
              type: string
            Cache-Control:
              description: Browser caching only, with forced validation
              type: string
            Content-Language:
              description: The language in the response body
              type: string
            Date:
              description: The date and time of the response
              type: string
            ETag:
              description: The entity tag of the resource
              type: string
            Expires:
              description: Force cache validation
              type: string
            Last-Modified:
              description: The date and time of the last modification of the resource
              type: string
            Vary:
              description: Accept, Accept-Charset, Accept-Language, X-API-Version - don't use cached data when these headers are different
              type: string
        "304":
          $ref: '#/responses/ClientsCachedResourceStillValidResponse'
        "400":
          $ref: '#/responses/OneofQueryParametersInvalidResponse'
        "401":
          $ref: '#/responses/CallerNotAuthenticatedUserResponse'
        "403":
          $ref: '#/responses/UserLacksPermissionToViewResourceResponse'
        "404":
          $ref: '#/responses/ResourceDoesNotExistResponse'
        "412":
          $ref: '#/responses/APIVersionNotSpecifiedResponse'
        "415":
          $ref: '#/responses/RequestedMediatypeNotSupportedResponse'
        "422":
          $ref: '#/responses/Standard422PayloadTooLarge'
        "500":
          $ref: '#/responses/Standard500ErrorResponse'
        default:
          $ref: '#/responses/Standard500ErrorResponse'
    post:
      description: Adds a Cloud Provider to marketplace. **NOT IMPLEMENTED**
      operationId: addCloudProvider
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - $ref: "#/parameters/acceptHeader"
        - $ref: "#/parameters/acceptCharsetHeader"
        - $ref: "#/parameters/acceptLanguageHeader"
        - $ref: "#/parameters/authHeader"
        - $ref: "#/parameters/customerId"
        - $ref: "#/parameters/userId"
        - $ref: "#/parameters/ifNoneMatchHeader"
        - $ref: "#/parameters/varyHeader"
        - $ref: "#/parameters/versionHeader"
        - name: cloudProvider
          in: body
          schema:
            $ref: "#/definitions/CloudProvider"
          description: Cloud Provider object
          required: true
      responses:
        "201":
          description: Cloud Provider has been Created
          schema:
              $ref: '#/definitions/CloudProvider'
          headers:
            Content-Type:
              description: Browser caching only, with forced validation
              type: string
            Content-Language:
              description: The language in the response body
              type: string
            Date:
              description: The date and time of the response
              type: string
            ETag:
              description: The entity tag of the resource
              type: string
            Last-Modified:
              description: The date and time of the last modification of the resource
              type: string
        "400":
          $ref: '#/responses/OneofQueryParametersInvalidResponse'
        "401":
          $ref: '#/responses/CallerNotAuthenticatedUserResponse'
        "403":
          $ref: '#/responses/UserLacksPermissionToViewResourceResponse'
        "412":
          $ref: '#/responses/APIVersionNotSpecifiedResponse'
        "500":
          $ref: '#/responses/Standard500ErrorResponse'
        default:
          $ref: '#/responses/Standard500ErrorResponse'
  /cloudServices/deployments:
    options:
      description: |
        Enable CORS by returning correct headers
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          $ref: '#/responses/APIOptionsResponse'
    get:
      description: Returns all deployed applications/VMs that the user has deployed. Pagination is not NOT IMPLEMENTED
      operationId: getAllCloudServiceDeployments
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - $ref: "#/parameters/workspaceIDQueryParam"
        - $ref: "#/parameters/serviceNameQueryParam"
        - $ref: "#/parameters/displayNameQueryParam"
        - $ref: "#/parameters/statusQueryParam"
        - $ref: "#/parameters/typeQueryParam"
        - $ref: "#/parameters/acceptHeader"
        - $ref: "#/parameters/acceptCharsetHeader"
        - $ref: "#/parameters/acceptLanguageHeader"
        - $ref: "#/parameters/authHeader"
        - $ref: "#/parameters/customerId"
        - $ref: "#/parameters/userId"
        - $ref: "#/parameters/startParam"
        - $ref: "#/parameters/countParam"
        - $ref: "#/parameters/fieldsParam"
        - $ref: "#/parameters/sortParam"
        - $ref: "#/parameters/viewParam"
        - $ref: "#/parameters/ifNoneMatchHeader"
        - $ref: "#/parameters/varyHeader"
        - $ref: "#/parameters/versionHeader"
      responses:
        "200":
          description: A list of Deployed CloudServices
          schema:
            $ref: '#/definitions/PagedCloudServiceDeployments'
          headers:
            Content-Type:
              description: Browser caching only, with forced validation
              type: string
            Cache-Control:
              description: Browser caching only, with forced validation
              type: string
            Content-Language:
              description: The language in the response body
              type: string
            Date:
              description: The date and time of the response
              type: string
            ETag:
              description: The entity tag of the resource
              type: string
            Expires:
              description: Force cache validation
              type: string
            Last-Modified:
              description: The date and time of the last modification of the resource
              type: string
            Vary:
              description: Accept, Accept-Charset, Accept-Language, X-API-Version - don't use cached data when these headers are different
              type: string
        "304":
          $ref: '#/responses/ClientsCachedResourceStillValidResponse'
        "400":
          $ref: '#/responses/OneofQueryParametersInvalidResponse'
        "401":
          $ref: '#/responses/CallerNotAuthenticatedUserResponse'
        "403":
          $ref: '#/responses/UserLacksPermissionToViewResourceResponse'
        "404":
          $ref: '#/responses/ResourceDoesNotExistResponse'
        "412":
          $ref: '#/responses/APIVersionNotSpecifiedResponse'
        "415":
          $ref: '#/responses/RequestedMediatypeNotSupportedResponse'
        "422":
          $ref: '#/responses/Standard422PayloadTooLarge'
        "500":
          $ref: '#/responses/Standard500ErrorResponse'
        default:
          $ref: '#/responses/Standard500ErrorResponse'
    post:
      description: Deploys a given cloud service of given cloud provider on to given cloud platform
      operationId: createCloudServiceDeployment
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - $ref: "#/parameters/acceptHeader"
        - $ref: "#/parameters/acceptCharsetHeader"
        - $ref: "#/parameters/acceptLanguageHeader"
        - $ref: "#/parameters/authHeader"
        - $ref: "#/parameters/customerId"
        - $ref: "#/parameters/userId"
        - $ref: "#/parameters/ifNoneMatchHeader"
        - $ref: "#/parameters/varyHeader"
        - $ref: "#/parameters/versionHeader"
        - name: cloudService
          in: body
          required: true
          description: The cloud service to deploy on given cloud platform and cloud provider.
          schema:
            $ref: '#/definitions/CloudServiceDeployment'
      responses:
        "202":
          description: Accept application creation request
          schema:
            $ref: '#/definitions/CloudServiceDeployment'
          headers:
            Content-Type:
              description: Browser caching only, with forced validation
              type: string
            Cache-Control:
              description: Browser caching only, with forced validation
              type: string
            Content-Language:
              description: The language in the response body
              type: string
            Date:
              description: The date and time of the response
              type: string
            ETag:
              description: The entity tag of the resource
              type: string
            Expires:
              description: Force cache validation
              type: string
            Last-Modified:
              description: The date and time of the last modification of the resource
              type: string
            Vary:
              description: Accept, Accept-Charset, Accept-Language, X-API-Version - don't use cached data when these headers are different
              type: string
        "400":
          $ref: '#/responses/OneofQueryParametersInvalidResponse'
        "401":
          $ref: '#/responses/CallerNotAuthenticatedUserResponse'
        "403":
          $ref: '#/responses/UserLacksPermissionToViewResourceResponse'
        "412":
          $ref: '#/responses/APIVersionNotSpecifiedResponse'
        "415":
          $ref: '#/responses/RequestedMediatypeNotSupportedResponse'
        "500":
          $ref: '#/responses/Standard500ErrorResponse'
        default:
          $ref: '#/responses/Standard500ErrorResponse'

  /cloudServices/deployments/{id}:
    options:
      description: |
        Enable CORS by returning correct headers
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          $ref: '#/responses/APIOptionsResponse'
    get:
      description: Returns requested cloudServiceDeployment
      operationId: getCloudServiceDeployment
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - $ref: "#/parameters/acceptHeader"
        - $ref: "#/parameters/acceptCharsetHeader"
        - $ref: "#/parameters/acceptLanguageHeader"
        - $ref: "#/parameters/authHeader"
        - $ref: "#/parameters/customerId"
        - $ref: "#/parameters/userId"
        - $ref: "#/parameters/ifNoneMatchHeader"
        - $ref: "#/parameters/varyHeader"
        - $ref: "#/parameters/versionHeader"
      responses:
        "200":
          description: Requested CloudServiceDeployment
          schema:
            $ref: '#/definitions/CloudServiceDeployment'
          headers:
            Content-Type:
              description: Browser caching only, with forced validation
              type: string
            Cache-Control:
              description: Browser caching only, with forced validation
              type: string
            Content-Language:
              description: The language in the response body
              type: string
            Date:
              description: The date and time of the response
              type: string
            ETag:
              description: The entity tag of the resource
              type: string
            Expires:
              description: Force cache validation
              type: string
            Last-Modified:
              description: The date and time of the last modification of the resource
              type: string
            Vary:
              description: Accept, Accept-Charset, Accept-Language, X-API-Version - don't use cached data when these headers are different
              type: string
        "404":
          $ref: '#/responses/ResourceDoesNotExistResponse'
        "400":
          $ref: '#/responses/OneofQueryParametersInvalidResponse'
        "401":
          $ref: '#/responses/CallerNotAuthenticatedUserResponse'
        "403":
          $ref: '#/responses/UserLacksPermissionToViewResourceResponse'
        "412":
          $ref: '#/responses/APIVersionNotSpecifiedResponse'
        "415":
          $ref: '#/responses/RequestedMediatypeNotSupportedResponse'
        "500":
          $ref: '#/responses/Standard500ErrorResponse'
        default:
          $ref: '#/responses/Standard500ErrorResponse'
    delete:
      description: Deletes requested CloudService Deployment
      operationId: deleteCloudServiceDeployment
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - $ref: "#/parameters/acceptHeader"
        - $ref: "#/parameters/acceptCharsetHeader"
        - $ref: "#/parameters/acceptLanguageHeader"
        - $ref: "#/parameters/authHeader"
        - $ref: "#/parameters/customerId"
        - $ref: "#/parameters/userId"
        - $ref: "#/parameters/ifNoneMatchHeader"
        - $ref: "#/parameters/varyHeader"
        - $ref: "#/parameters/versionHeader"
        - name: kubeInfo
          in: body
          required: false
          description: Kube config information to delete the deployment.
          schema:
            $ref: '#/definitions/DeploymentKubeInfo'
      responses:
        "202":
          description: Accept CloudService Deployment deletion request
          schema:
            $ref: '#/definitions/CloudServiceDeployment'
          headers:
            Content-Type:
              description: Browser caching only, with forced validation
              type: string
            Cache-Control:
              description: Browser caching only, with forced validation
              type: string
            Content-Language:
              description: The language in the response body
              type: string
            Date:
              description: The date and time of the response
              type: string
            ETag:
              description: The entity tag of the resource
              type: string
            Expires:
              description: Force cache validation
              type: string
            Last-Modified:
              description: The date and time of the last modification of the resource
              type: string
            Vary:
              description: Accept, Accept-Charset, Accept-Language, X-API-Version - don't use cached data when these headers are different
              type: string
        "404":
          $ref: '#/responses/ResourceDoesNotExistResponse'
        "400":
          $ref: '#/responses/OneofQueryParametersInvalidResponse'
        "401":
          $ref: '#/responses/CallerNotAuthenticatedUserResponse'
        "403":
          $ref: '#/responses/UserLacksPermissionToViewResourceResponse'
        "412":
          $ref: '#/responses/APIVersionNotSpecifiedResponse'
        "415":
          $ref: '#/responses/RequestedMediatypeNotSupportedResponse'
        "500":
          $ref: '#/responses/Standard500ErrorResponse'
        default:
          $ref: '#/responses/Standard500ErrorResponse'

parameters:
  cloudPlatformsQueryParam:
    name: cloudPlatformNames
    in: query
    description: Comma separated cloud platform names to filter by. NOT IMPLEMENTED
    required: false
    type: array
    items:
      type: string
      enum:
        - AWS
        - GCP
        - AZURE
        - VMWARE
        - KUBERNETES
#       - OPENSTACK
#       - MESOSPHERE
  cloudProvidersQueryParam:
    name: cloudProviderNames
    in: query
    description: Comma separated cloud provider names to filter by. NOT IMPLEMENTED
    required: false
    type: array
    items:
      type: string
  startParam:
    name: start
    in: query
    description: Index of first member to return
    required: false
    type: number
    format: int32
    default: 0
  countParam:
    name: count
    in: query
    description: Number of members to return
    required: false
    type: number
    format: int32
    minimum: -1
    default: 50
  fieldsParam:
    name: fields
    description: Possible representations of a resource as returned by a GET, PATCH, POST, or PUT request in NCS marketplace.  NOT IMPLEMENTED
    in: query
    required: false
    type: array
    items:
      type: string
  sortParam:
    name: sort
    description: Sort order for returned members in the form attribute:ascending or attribute:descending.  NOT IMPLEMENTED
    in: query
    required: false
    type: array
    items:
      type: string
  viewParam:
    name: view
    description: Possible representations of a resource as returned by a GET, PATCH, POST, or PUT request in NCS marketplace.  NOT IMPLEMENTED
    in: query
    required: false
    type: string
    enum:
    - default
    - expand
    - summary
  acceptHeader:
    name: Accept
    in: header
    description: Acceptable media types for response. NOT IMPLEMENTED
    required: false
    type: string
    default: application/json
  acceptCharsetHeader:
    name: Accept-Charset
    in: header
    description: Acceptable character sets for response. NOT IMPLEMENTED
    required: false
    type: string
    default: UTF-8
  acceptLanguageHeader:
    name: Accept-Language
    in: header
    description: Acceptable languages for response. NOT IMPLEMENTED
    required: false
    type: string
  authHeader:
    name: Authorization
    in: header
    description: User authentication token
    required: false
    type: string
    format: Security
  customerId:
    name: X-Ncs-Customer-Id
    in: header
    description: NCS Customer ID. NOT IMPLEMENTED
    required: false
    type: string
  userId:
    name: X-Ncs-User-Id
    in: header
    description: NCS User ID. NOT IMPLEMENTED
    required: false
    type: string
  ifNoneMatchHeader:
    name: If-None-Match
    in: header
    description: Entity tag for cached response. NOT IMPLEMENTED. Will be made madatory field when its implemented
    required: false
    type: string
  varyHeader:
    name: Vary
    in: header
    description: Entity tag for cached response. NOT IMPLEMENTED. Will be made madatory field when its implemented
    required: false
    type: string
  versionHeader:
    name: X-API-Version
    in: header
    description: Requested API version
    required: false
    type: number
    format: int32
    default: 1
  workspaceIDQueryParam:
    name: workspaceIDs
    in: query
    description: comma separated deployment workspace-id to filter by
    required: false
    type: array
    items:
      type: string
  serviceNameQueryParam:
    name: serviceNames
    in: query
    description: comma separated deployment service names to filter by
    required: false
    type: array
    items:
      type: string
  displayNameQueryParam:
    name: displayNames
    in: query
    description: comma separated display names to filter by
    required: false
    type: array
    items:
      type: string
  statusQueryParam:
    name: status
    in: query
    description: comma separated statuses to filter by
    required: false
    type: array
    items:
      type: string
      enum:
      - ERROR
      - CREATING
      - CREATED
      - DELETING
      - DELETED
  typeQueryParam:
    name: type
    in: query
    description: comma separated display types to filter by
    required: false
    type: array
    items:
      type: string
      enum:
      - Release
      - VM
      - Container
  serviceQueryParam:
    name: service
    in: query
    description: Service to filter by. Only filtering by name is allowed for discover demo/PI-2
    required: false
    type: string
definitions:
  DeploymentKubeInfo:
    type: object
    properties:
      kubeEndpoint:
        type: string
        description: The kube end point from where the deployment should be deleted
      kubeClientKeyData:
        type: string
        description: Client key data
      kubeClientCertificateData:
        type: string
        description: Client certificate data
      kubeCertificateAuthorityData:
        type: string
        description: Certificate authority data
      kubeConfig:
        type: string
        description: Base64 encoded kubeconfig
      kubeContext:
        type: string
  CloudService:
    type: object
    description: An individual Cloud Service record
    required:
    - id
    - displayName
    - version
    - cloudProviderId
    - cost
    - type
    - icon
    - shortDescription
    - detailedDescription
    - detailedDescriptionURL
    - deploymentInformation
    - category
    properties:
      id:
        type: string
        description: ID for Cloud Service
      displayName:
        type: string
        description: Localized display name of Cloud Service
      icon:
        type: string
        description: Localized display icon of Cloud Service
      license:
        type: string
        description: Localized display license of Cloud Service
      shortDescription:
        type: string
        description: Localized display description of Cloud Service
      detailedDescription:
        type: string
        description: Localized display detailed description of a single Cloud Service
      detailedDescriptionURL:
        type: string
        description: Localized display detailed description URL of a single Cloud Service
      deploymentInformation:
        type: string
        description: Localized display deployment details of a single Cloud Service
      version:
        type: string
        description: Version of cloud service
      cloudProviderId:
        type: string
        description: Id of the CloudProvider
      cloudPlatforms:
        "$ref": "#/definitions/CloudPlatforms"
      cost:
        type: number
        format: float
        description: Cost of the service(in USD)
      uri:
        type: string
        description: A resource path of cloud service
      type:
        type: string
        description: Type of cloud service
        enum:
        - VM Template
        - Docker Image
        - K8S Chart
      category:
        "$ref": "#/definitions/Category"
      metadata:
        "$ref": '#/definitions/CloudServiceMetadata'
  CloudServiceMetadata:
    type: object
    properties:
      publisher:
        type: string
  CloudPlatform:
    type: object
    description: Cloud platform on which cloud service can be deployed
    required:
      - platformId
      - displayName
      - type
      - category
    properties:
      platformId:
        type: string
        format: UUID
        description: Unique identifier of Cloud platform as returned by NCS workspace
      displayName:
        type: string
        description: Localized display name of Cloud Platform
        enum:
        - AWS
        - GCP
        - AZURE
        - VMWARE
        - KUBERNETES
        - OPENSTACK
        - MESOSPHERE
      uri:
        type: string
        description: A resource path of cloud platform
      type:
        "$ref": "#/definitions/ResourceType"
      category:
        "$ref": "#/definitions/Category"
  CloudPlatforms:
    type: array
    items:
      "$ref": "#/definitions/CloudPlatform"
  CloudProvider:
    type: object
    description: Name of cloud provider such as docker hub, helm charts which provides the cloud service
    required:
      - displayName
      - providerType
      - url
    properties:
      providerId:
        type: string
        format: UUID
        description: Unique identifier of Cloud Provider
      displayName:
        type: string
        description: Localized display name of Cloud Provider
      providerType:
        type: string
        description: Cloud Provider Type
        enum:
        - DOCKER_REGISTRY
        - DOCKER_HUB
        - HELM_REPO
      url:
        type: string
        description: URL of Cloud Provider
      type:
        "$ref": "#/definitions/ResourceType"
      category:
        "$ref": "#/definitions/Category"
  ResourceType:
    type: string
    enum:
    - CloudService
    - CloudPlatform
    - CloudProvider
    - Event
    description: Possible resource types in NCS marketplace
  DeployedServiceType:
    type: string
    enum:
    - Release
    - VM
    - Container
    description: Type of the service deployed
  NicDetails:
    type: object
    properties:
      networkID:
        type: string
      netMacAddr:
        type: string
      ipAddress:
        type: string
  DeployedServiceInfo:
    type: object
    properties:
      vmUUID:
        type: string
      cloudServiceId:
        type: string
      memorySizeMB:
        type: integer
      diskSizeGB:
        type: integer
      cpuCount:
        type: integer
      appDeploymentinfo:
        type: string
      appEndpoint:
        type: string
      containerName:
        type: string
      containerType:
        type: string
      nics:
        type: array
        items:
          "$ref": "#/definitions/NicDetails"
  Category:
    type: string
    enum:
    - Alert
    - Task
    - Resource
    description: Possible resource categories in NCS marketplace. TODO need to find
      how categories are used
  ErrorModel:
    type: object
    required:
    - message
    - details
    properties:
      errorCode:
        type: string
      message:
        type: string
      details:
        type: string
      recommendedActions:
        type: array
        items:
          type: string
      nestedErrors:
        type: string
      errorSource:
        type: string
      data:
        type: string
      canForce:
        type: boolean
  CloudServiceDeployment:
    type: object
    required:
    - cloudServiceName
    - cloudProviderId
    - cloudPlatformId
    - workspaceId
    - version
    properties:
      cloudServiceName:
        type: string
      cloudProviderId:
        type: string
        format: UUID
      cloudPlatformId:
        type: string
        format: UUID
      cloudServiceId:
        type: string
        format: UUID
      workspaceId:
        type: string
        description: The workpsace into which the service has to be deployed. It can be a valid UUID from workspace manager or a name.
      displayName:
        type: string
      id:
        type: string
        format: UUID
      input:
        type: string
      version:
        type: string
      status:
        type: string
      uri:
        type: string
        description: A resource path of cloud deployment 
      kubeConfig:
        type: string
        description: Base64 encoded kubeconfig
      kubeContext:
        type: string
      kubeEndpoint:
        type: string
      kubeClientKeyData:
        type: string
      kubeClientCertificateData:
        type: string
      kubeCertificateAuthorityData:
        type: string
      type:
        "$ref": "#/definitions/ResourceType"
      category:
        "$ref": "#/definitions/Category"
      deployedServiceType:
        "$ref": "#/definitions/DeployedServiceType"
      deployedServiceInfo:
        "$ref": "#/definitions/DeployedServiceInfo"
  Paging:
    type: object
    required:
      - eTag
      - total
      - count
      - start
      - prevPageUri
      - nextPageUri
    properties:
      eTag:
        type: string
        description: The entity tag of the collection, or of the resource containing the list
      total:
        type: integer
        format: int32
        description: The total number of resources or items matching the request
      count:
        type: integer
        format: int32
        description: The number of resources/items in this page
      start:
        type: integer
        format: int32
        description: The zero-based index of the first resource or item in this page
      prevPageUri:
        type: string
        format: URI
        description: URI for retrieval of the previous page.
      nextPageUri:
        type: string
        format: URI
        description: URI for retrieval of the next page.
  PagedCloudServices:
    allOf:
      - $ref: '#/definitions/Paging'
      - properties:
          members:
            type: array
            items:
              "$ref": "#/definitions/CloudService"
  PagedCloudProviders:
    allOf:
      - $ref: '#/definitions/Paging'
      - properties:
          CloudProviders:
             type: array
             items:
               "$ref": "#/definitions/CloudProvider"
  PagedCloudServiceDeployments:
    allOf:
      - $ref: '#/definitions/Paging'
      - properties:
          members:
             type: array
             items:
               "$ref": "#/definitions/CloudServiceDeployment"
responses:
  Standard500ErrorResponse:
    description: An unexpected error occured.
    headers:
      Content-Type:
        description: Entity header is used to indicate the media type of the resource
        type: string
      Cache-Control:
        description: Browser caching only, with forced validation
        type: string
      Content-Language:
        description: The language in the response body
        type: string
      Date:
        description: The date and time of the response
        type: string
      ETag:
        description: The entity tag of the resource
        type: string
      Expires:
        description: Force cache validation
        type: string
      Last-Modified:
        description: The date and time of the last modification of the resource
        type: string
      Vary:
        description: Accept, Accept-Charset, Accept-Language, X-API-Version - don't use cached data when these headers are different
        type: string
    schema:
      $ref: '#/definitions/ErrorModel'
  ResourceDoesNotExistResponse:
    description: "The resource does not exist, or did not exist in the requested API version"
    headers:
      Cache-Control:
        description: Browser caching only, with forced validation
        type: string
      Content-Language:
        description: The language in the response body
        type: string
      Date:
        description: The date and time of the response
        type: string
      ETag:
        description: The entity tag of the resource
        type: string
      Expires:
        description: Force cache validation
        type: string
      Last-Modified:
        description: The date and time of the last modification of the resource
        type: string
      Vary:
        description: Accept, Accept-Charset, Accept-Language, X-API-Version - don't use cached data when these headers are different
        type: string
    schema:
      $ref: '#/definitions/ErrorModel'
  RequestedMediatypeNotSupportedResponse:
    description: "The requested mediatype is not supported"
    headers:
      Cache-Control:
        description: Browser caching only, with forced validation
        type: string
      Content-Language:
        description: The language in the response body
        type: string
      Date:
        description: The date and time of the response
        type: string
      ETag:
        description: The entity tag of the resource
        type: string
      Expires:
        description: Force cache validation
        type: string
      Last-Modified:
        description: The date and time of the last modification of the resource
        type: string
      Vary:
        description: Accept, Accept-Charset, Accept-Language, X-API-Version - don't use cached data when these headers are different
        type: string
    schema:
      $ref: '#/definitions/ErrorModel'
  ClientsCachedResourceStillValidResponse:
    description: "The client's cached resource is still valid"
    headers:
      Cache-Control:
        description: Browser caching only, with forced validation
        type: string
      Content-Language:
        description: The language in the response body
        type: string
      Date:
        description: The date and time of the response
        type: string
      ETag:
        description: The entity tag of the resource
        type: string
      Expires:
        description: Force cache validation
        type: string
      Last-Modified:
        description: The date and time of the last modification of the resource
        type: string
      Vary:
        description: Accept, Accept-Charset, Accept-Language, X-API-Version - don't use cached data when these headers are different
        type: string
    schema:
      $ref: '#/definitions/ErrorModel'
  OneofQueryParametersInvalidResponse:
    description: "One of the query parameters had an invalid value"
    headers:
      Content-Type:
        description: Entity header is used to indicate the media type of the resource
        type: string
      Cache-Control:
        description: Browser caching only, with forced validation
        type: string
      Content-Language:
        description: The language in the response body
        type: string
      Date:
        description: The date and time of the response
        type: string
      ETag:
        description: The entity tag of the resource
        type: string
      Expires:
        description: Force cache validation
        type: string
      Last-Modified:
        description: The date and time of the last modification of the resource
        type: string
      Vary:
        description: Accept, Accept-Charset, Accept-Language, X-API-Version - don't use cached data when these headers are different
        type: string
    schema:
      $ref: '#/definitions/ErrorModel'
  Standard422PayloadTooLarge:
    description: "The payload returned is too large"
    headers:
      Content-Type:
        description: Entity header is used to indicate the media type of the resource
        type: string
      Cache-Control:
        description: Browser caching only, with forced validation
        type: string
      Content-Language:
        description: The language in the response body
        type: string
      Date:
        description: The date and time of the response
        type: string
      ETag:
        description: The entity tag of the resource
        type: string
      Expires:
        description: Force cache validation
        type: string
      Last-Modified:
        description: The date and time of the last modification of the resource
        type: string
      Vary:
        description: Accept, Accept-Charset, Accept-Language, X-API-Version - don't use cached data when these headers are different
        type: string
    schema:
      $ref: '#/definitions/ErrorModel'
  CallerNotAuthenticatedUserResponse:
    description: "The caller is not an authenticated user"
    headers:
      Cache-Control:
        description: Browser caching only, with forced validation
        type: string
      Content-Language:
        description: The language in the response body
        type: string
      Date:
        description: The date and time of the response
        type: string
      ETag:
        description: The entity tag of the resource
        type: string
      Expires:
        description: Force cache validation
        type: string
      Last-Modified:
        description: The date and time of the last modification of the resource
        type: string
      Vary:
        description: Accept, Accept-Charset, Accept-Language, X-API-Version - don't use cached data when these headers are different
        type: string
    schema:
      $ref: '#/definitions/ErrorModel'
  UserLacksPermissionToViewResourceResponse:
    description: "The user lacks permission to view the resource"
    headers:
      Cache-Control:
        description: Browser caching only, with forced validation
        type: string
      Content-Language:
        description: The language in the response body
        type: string
      Date:
        description: The date and time of the response
        type: string
      ETag:
        description: The entity tag of the resource
        type: string
      Expires:
        description: Force cache validation
        type: string
      Last-Modified:
        description: The date and time of the last modification of the resource
        type: string
      Vary:
        description: Accept, Accept-Charset, Accept-Language, X-API-Version - don't use cached data when these headers are different
        type: string
    schema:
      $ref: '#/definitions/ErrorModel'
  APIVersionNotSpecifiedResponse:
    description: "The API version was not specified or is not supported by the CI system, or the API has been obsoleted in the requested version"
    headers:
      Cache-Control:
        description: Browser caching only, with forced validation
        type: string
      Content-Language:
        description: The language in the response body
        type: string
      Date:
        description: The date and time of the response
        type: string
      ETag:
        description: The entity tag of the resource
        type: string
      Expires:
        description: Force cache validation
        type: string
      Last-Modified:
        description: The date and time of the last modification of the resource
        type: string
      Vary:
        description: Accept, Accept-Charset, Accept-Language, X-API-Version - don't use cached data when these headers are different
        type: string
    schema:
      $ref: '#/definitions/ErrorModel'
  APIOptionsResponse:
    description: Default response for CORS method
    headers:
      Allow:
        type: string
      Access-Control-Allow-Headers:
        type: string
      Access-Control-Allow-Methods:
        type: string
      Access-Control-Allow-Origin:
        type: string
